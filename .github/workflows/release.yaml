name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Display branch name
        run: |
          echo "current branch: $GITHUB_REF"
      - name: Init submodules
        run: git submodule update --init --recursive
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Test
        run: ./gradlew test
      - name: Assemble
        run: ./gradlew assemble
      - name: Upload APKs
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: app/build/outputs/apk/**/*.apk
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Identify release artifact
        id: identify_apk
        run: |
          echo "release_apk=$(ls app/build/outputs/apk/release/*.apk)" >> $GITHUB_ENV
          echo "release_apk_short=$(ls app/build/outputs/apk/release/*.apk | sed -e 's#^.*/##g')" >> $GITHUB_ENV
      - name: Upload release artifact
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.release_apk }}
          asset_name: ${{ env.release_apk_short }}
          asset_content_type: application/vnd.android.package-archive
      - name: Cleanup Gradle cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
